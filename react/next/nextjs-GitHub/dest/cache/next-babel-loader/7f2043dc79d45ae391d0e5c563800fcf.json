{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { createStore, combineReducers } from 'redux';\nvar initialState = {\n  count: 0\n};\nvar userInitialState = {\n  username: 'wn'\n};\nvar ADD = 'ADD';\n\nfunction counterReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  console.log(state, action);\n\n  switch (action.type) {\n    case ADD:\n      return {\n        count: state.count + (action.num || 1)\n      };\n\n    default:\n      return state;\n  }\n}\n\nvar UPDATE_USERNAME = 'UPDATE_USERNAME';\n\nfunction userReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : userInitialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case UPDATE_USERNAME:\n      return _objectSpread({}, state, {\n        username: action.name\n      });\n\n    default:\n      return state;\n  }\n}\n\nvar allReducer = combineReducers({\n  counter: counterReducer,\n  user: userReducer\n}); // {counter:initialState, user:userInitialState}\n\nvar store = createStore(allReducer, {\n  counter: counterReducer,\n  user: userReducer\n}); //action creatore\n\nfunction add(num) {\n  return {\n    type: ADD,\n    num: num\n  };\n} //  console.log(store.getState());\n\n\nstore.dispatch(add(3)); //  console.log(store.getState());\n\nstore.subscribe(function () {\n  console.log('change' + store.getState());\n});\nstore.dispatch({\n  type: ADD\n});\nstore.dispatch({\n  type: UPDATE_USERNAME,\n  name: 'mg'\n});\nexport default store;","map":{"version":3,"sources":["E:/javascript_fullstack/react/next/nextjs-GitHub/store/store.js"],"names":["createStore","combineReducers","initialState","count","userInitialState","username","ADD","counterReducer","state","action","console","log","type","num","UPDATE_USERNAME","userReducer","name","allReducer","counter","user","store","add","dispatch","subscribe","getState"],"mappings":";;;;;;AAAC,SAASA,WAAT,EAAqBC,eAArB,QAA4C,OAA5C;AAED,IAAMC,YAAY,GAAG;AACjBC,EAAAA,KAAK,EAAE;AADU,CAArB;AAIA,IAAMC,gBAAgB,GAAG;AACrBC,EAAAA,QAAQ,EAAE;AADW,CAAzB;AAIA,IAAMC,GAAG,GAAG,KAAZ;;AACA,SAASC,cAAT,GAAqD;AAAA,MAA7BC,KAA6B,uEAArBN,YAAqB;AAAA,MAARO,MAAQ;AACjDC,EAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ,EAAmBC,MAAnB;;AAEA,UAAQA,MAAM,CAACG,IAAf;AACI,SAAKN,GAAL;AACI,aAAO;AAAEH,QAAAA,KAAK,EAAEK,KAAK,CAACL,KAAN,IAAgBM,MAAM,CAACI,GAAP,IAAc,CAA9B;AAAT,OAAP;;AACA;AACI,aAAOL,KAAP;AAJZ;AAMH;;AACD,IAAMM,eAAe,GAAE,iBAAvB;;AACA,SAASC,WAAT,GAAwD;AAAA,MAAlCP,KAAkC,uEAA1BJ,gBAA0B;AAAA,MAARK,MAAQ;;AACpD,UAAQA,MAAM,CAACG,IAAf;AACI,SAAKE,eAAL;AACI,+BACON,KADP;AAEIH,QAAAA,QAAQ,EAAEI,MAAM,CAACO;AAFrB;;AAIA;AACA,aAAOR,KAAP;AAPR;AASH;;AACD,IAAMS,UAAU,GAAGhB,eAAe,CAAE;AAChCiB,EAAAA,OAAO,EAACX,cADwB;AAEhCY,EAAAA,IAAI,EAACJ;AAF2B,CAAF,CAAlC,C,CAKA;;AAIC,IAAMK,KAAK,GAAGpB,WAAW,CAAGiB,UAAH,EAAc;AACpCC,EAAAA,OAAO,EAACX,cAD4B;AAEpCY,EAAAA,IAAI,EAACJ;AAF+B,CAAd,CAAzB,C,CAKA;;AACA,SAASM,GAAT,CAAaR,GAAb,EAAkB;AACf,SAAM;AACFD,IAAAA,IAAI,EAAEN,GADJ;AAEFO,IAAAA,GAAG,EAAHA;AAFE,GAAN;AAIF,C,CAGF;;;AACCO,KAAK,CAACE,QAAN,CAAeD,GAAG,CAAC,CAAD,CAAlB,E,CACD;;AAECD,KAAK,CAACG,SAAN,CAAgB,YAAK;AACjBb,EAAAA,OAAO,CAACC,GAAR,CAAY,WAAWS,KAAK,CAACI,QAAN,EAAvB;AACH,CAFD;AAGAJ,KAAK,CAACE,QAAN,CAAe;AAACV,EAAAA,IAAI,EAAEN;AAAP,CAAf;AACAc,KAAK,CAACE,QAAN,CAAe;AAACV,EAAAA,IAAI,EAAEE,eAAP;AAAwBE,EAAAA,IAAI,EAAE;AAA9B,CAAf;AAEA,eAAeI,KAAf","sourcesContent":[" import { createStore,combineReducers } from 'redux'\r\n\r\nconst initialState = {\r\n    count: 0\r\n}\r\n\r\nconst userInitialState = {\r\n    username: 'wn'\r\n}\r\n\r\nconst ADD = 'ADD'\r\nfunction counterReducer(state = initialState,action) {\r\n    console.log(state, action);\r\n    \r\n    switch (action.type) {\r\n        case ADD:\r\n            return { count: state.count + ( action.num || 1 )}\r\n            default:\r\n                return state\r\n    }\r\n}\r\nconst UPDATE_USERNAME= 'UPDATE_USERNAME'\r\nfunction userReducer (state = userInitialState, action) {\r\n    switch (action.type) {\r\n        case UPDATE_USERNAME:\r\n            return {\r\n                ...state,\r\n                username: action.name\r\n            }\r\n            default: \r\n            return state\r\n    }\r\n}\r\nconst allReducer = combineReducers ({\r\n    counter:counterReducer,\r\n    user:userReducer\r\n})\r\n\r\n// {counter:initialState, user:userInitialState}\r\n\r\n\r\n\r\n const store = createStore ( allReducer,{\r\n    counter:counterReducer,\r\n    user:userReducer\r\n })\r\n   \r\n //action creatore\r\n function add(num) {\r\n    return{\r\n        type: ADD,\r\n        num\r\n    }\r\n }\r\n\r\n\r\n//  console.log(store.getState());\r\n store.dispatch(add(3))\r\n//  console.log(store.getState());\r\n \r\n store.subscribe(() =>{\r\n     console.log('change' + store.getState())\r\n })\r\n store.dispatch({type: ADD})\r\n store.dispatch({type: UPDATE_USERNAME, name: 'mg'})\r\n\r\n export default store"]},"metadata":{},"sourceType":"module"}