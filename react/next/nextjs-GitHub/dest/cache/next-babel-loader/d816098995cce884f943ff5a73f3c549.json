{"ast":null,"code":"import { createStore } from 'redux';\nvar initialState = {\n  count: 0\n};\nvar userInitialState = {\n  username: 'wn'\n};\nvar ADD = 'ADD';\n\nfunction reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  console.log(state, action);\n\n  switch (action.type) {\n    case ADD:\n      return {\n        count: state.count + 1\n      };\n\n    default:\n      return state;\n  }\n}\n\nvar UPDATE_USERNAME = 'UPDATE_USERNAME';\n\nfunction userReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : userInitialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case UPDATE_USERNAME:\n      return {\n        username: action.name\n      };\n\n    default:\n      return state;\n  }\n}\n\nvar store = createStore(reducer, initialState); //  console.log(store.getState());\n\nstore.dispatch({\n  type: ADD\n}); //  console.log(store.getState());\n\nstore.subscribe(function () {\n  console.log('change' + store.getState());\n});\nstore.dispatch({\n  type: ADD\n});\nexport default store;","map":{"version":3,"sources":["E:/javascript_fullstack/react/next/nextjs-GitHub/store/store.js"],"names":["createStore","initialState","count","userInitialState","username","ADD","reducer","state","action","console","log","type","UPDATE_USERNAME","userReducer","name","store","dispatch","subscribe","getState"],"mappings":"AAAC,SAASA,WAAT,QAA4B,OAA5B;AAED,IAAMC,YAAY,GAAG;AACjBC,EAAAA,KAAK,EAAE;AADU,CAArB;AAIA,IAAMC,gBAAgB,GAAG;AACrBC,EAAAA,QAAQ,EAAE;AADW,CAAzB;AAIA,IAAMC,GAAG,GAAG,KAAZ;;AACA,SAASC,OAAT,GAA8C;AAAA,MAA7BC,KAA6B,uEAArBN,YAAqB;AAAA,MAARO,MAAQ;AAC1CC,EAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ,EAAmBC,MAAnB;;AAEA,UAAQA,MAAM,CAACG,IAAf;AACI,SAAKN,GAAL;AACI,aAAO;AAAEH,QAAAA,KAAK,EAAEK,KAAK,CAACL,KAAN,GAAc;AAAvB,OAAP;;AACA;AACI,aAAOK,KAAP;AAJZ;AAMH;;AACD,IAAMK,eAAe,GAAE,iBAAvB;;AACA,SAASC,WAAT,GAAwD;AAAA,MAAlCN,KAAkC,uEAA1BJ,gBAA0B;AAAA,MAARK,MAAQ;;AACpD,UAAQA,MAAM,CAACG,IAAf;AACI,SAAKC,eAAL;AACI,aAAO;AACHR,QAAAA,QAAQ,EAAEI,MAAM,CAACM;AADd,OAAP;;AAGA;AACA,aAAOP,KAAP;AANR;AAQH;;AAEA,IAAMQ,KAAK,GAAGf,WAAW,CAAGM,OAAH,EAAYL,YAAZ,CAAzB,C,CACD;;AACCc,KAAK,CAACC,QAAN,CAAe;AAACL,EAAAA,IAAI,EAAEN;AAAP,CAAf,E,CACD;;AAECU,KAAK,CAACE,SAAN,CAAgB,YAAK;AACjBR,EAAAA,OAAO,CAACC,GAAR,CAAY,WAAWK,KAAK,CAACG,QAAN,EAAvB;AACH,CAFD;AAGAH,KAAK,CAACC,QAAN,CAAe;AAACL,EAAAA,IAAI,EAAEN;AAAP,CAAf;AACA,eAAeU,KAAf","sourcesContent":[" import { createStore } from 'redux'\r\n\r\nconst initialState = {\r\n    count: 0\r\n}\r\n\r\nconst userInitialState = {\r\n    username: 'wn'\r\n}\r\n\r\nconst ADD = 'ADD'\r\nfunction reducer(state = initialState,action) {\r\n    console.log(state, action);\r\n    \r\n    switch (action.type) {\r\n        case ADD:\r\n            return { count: state.count + 1}\r\n            default:\r\n                return state\r\n    }\r\n}\r\nconst UPDATE_USERNAME= 'UPDATE_USERNAME'\r\nfunction userReducer (state = userInitialState, action) {\r\n    switch (action.type) {\r\n        case UPDATE_USERNAME:\r\n            return {\r\n                username: action.name\r\n            }\r\n            default: \r\n            return state\r\n    }\r\n}\r\n\r\n const store = createStore ( reducer, initialState)\r\n//  console.log(store.getState());\r\n store.dispatch({type: ADD})\r\n//  console.log(store.getState());\r\n \r\n store.subscribe(() =>{\r\n     console.log('change' + store.getState())\r\n })\r\n store.dispatch({type: ADD})\r\n export default store"]},"metadata":{},"sourceType":"module"}