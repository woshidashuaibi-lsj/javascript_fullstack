{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react'; // class MyCount extends React.Component {\n//     state = {\n//         count: 0\n//     }\n//     componentDidMount() {\n//     }\n//     componentWillUnmount() {\n//         if(this.interval){\n//             clearInterval(this.interval)\n//         }\n//     }\n//     render() {\n//     return <span>{this.state.count}</span>\n//     }\n// }\n\nfunction myCountFunc() {\n  const {\n    0: count,\n    1: setCount\n  } = useState(0);\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setCount(c => c + 1);\n    }, 1000);\n    return () => clearInterval(interval);\n  }, []);\n  return __jsx(\"span\", null, count);\n}\n\nexport default myCountFunc;","map":{"version":3,"sources":["E:/javascript_fullstack/react/next/nextjs-GitHub/pages/test/b.js"],"names":["React","useState","useEffect","myCountFunc","count","setCount","interval","setInterval","c","clearInterval"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C,C,CACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASC,WAAT,GAAuB;AACnB,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBJ,QAAQ,CAAC,CAAD,CAAlC;AACAC,EAAAA,SAAS,CAAE,MAAM;AACb,UAAMI,QAAQ,GAAGC,WAAW,CAAC,MAAM;AAC/BF,MAAAA,QAAQ,CAACG,CAAC,IAAGA,CAAC,GAAC,CAAP,CAAR;AACH,KAF2B,EAEzB,IAFyB,CAA5B;AAGA,WAAO,MAAMC,aAAa,CAACH,QAAD,CAA1B;AACH,GALQ,EAKP,EALO,CAAT;AAMJ,SAAO,oBAAOF,KAAP,CAAP;AACC;;AAED,eAAeD,WAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\r\n// class MyCount extends React.Component {\r\n//     state = {\r\n//         count: 0\r\n//     }\r\n\r\n//     componentDidMount() {\r\n        \r\n//     }\r\n\r\n//     componentWillUnmount() {\r\n//         if(this.interval){\r\n//             clearInterval(this.interval)\r\n//         }\r\n//     }\r\n//     render() {\r\n//     return <span>{this.state.count}</span>\r\n//     }\r\n// }\r\n\r\nfunction myCountFunc() {\r\n    const [count, setCount] = useState(0)\r\n    useEffect (() => {\r\n        const interval = setInterval(() => {\r\n            setCount(c =>c+1)\r\n        }, 1000);\r\n        return () => clearInterval(interval) \r\n    },[])\r\nreturn <span>{count}</span>\r\n}\r\n\r\nexport default myCountFunc"]},"metadata":{},"sourceType":"module"}